package kr.happyjob.study.adm.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.log4j.LogManager;
import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.happyjob.study.adm.service.LectureManagementService;
import kr.happyjob.study.std.model.LectureListModel;


@Controller
@RequestMapping("/adm/")
public class LectureManagementController {
	
	@Autowired
	LectureManagementService LectureManagementService;
	
	// Set logger
	private final Logger logger = LogManager.getLogger(this.getClass());

	// Get class name for logger
	private final String className = this.getClass().toString();
	
	
	
	/**
	 * 초기화면
	 */
	@RequestMapping("lectureManagement.do")
	public String lectureManagement(Model model, @RequestParam Map<String, Object> paramMap, HttpServletRequest request,
			HttpServletResponse response, HttpSession session) throws Exception {
		
		logger.info("+ Start " + className + ".lectureManagement");
		logger.info("   - paramMap : " + paramMap);
		
		logger.info("+ End " + className + ".lectureManagement");

		return "adm/lectureManagement/lectureManagement";
	}
	
	//list 출력
		@RequestMapping("lectureManagementList.do")
		public String lectureListSearch(Model model, @RequestParam Map<String, Object> paramMap, HttpServletRequest request,
				HttpServletResponse response, HttpSession session) throws Exception {
			
			logger.info("+ Start " + className + ".lectureListSearch");
			logger.info("   - paramMap : " + paramMap);
			
			int pagenum =Integer.parseInt(String.valueOf(paramMap.get("pagenum")));
			int pageSize =Integer.parseInt(String.valueOf(paramMap.get("pageSize")));
			int startnum = (pagenum - 1) * pageSize;

			paramMap.put("startnum", startnum);
			paramMap.put("pageSize", pageSize);
			
			List<LectureListModel> lectureListSearch = LectureManagementService.lectureListSearch(paramMap);
			int totalcnt = LectureManagementService.lectureListCnt(paramMap);
			
			model.addAttribute("lectureListSearch", lectureListSearch);
			model.addAttribute("totalcnt", totalcnt);
			
			logger.info("+ End " + className + ".lectureListSearch");

			return "adm/lectureManagement/lectureManagementList";
		}
		
		//list 한건 조회
//		@RequestMapping("lectureSelect.do")
//		public String lectureSelect(Model model, @RequestParam Map<String, Object> paramMap, HttpServletRequest request,
//				HttpServletResponse response, HttpSession session) throws Exception {
//			
//			logger.info("+ Start " + className + ".lectureSelect");
//			logger.info("   - paramMap : " + paramMap);
//			
//			LectureListModel lectureSelect = LectureManagementService.lectureSelect(paramMap);
//			//int totalcnt = lecturelistService.lectureListCnt(paramMap);
//			
//			//List<LectureListModel> lectureSelect = lecturelistService.lectureListSearch(paramMap);
//			
//			model.addAttribute("lectureSelect", lectureSelect);
//			//model.addAttribute("totalcnt", 0);
//			//model.addAttribute("lectureSelect", "");
//			
//			logger.info("+ End " + className + ".lectureSelect");
//
//			return "std/lectureList/lectureSelect";
//		}

		/**
		 * 강의 저장
		 */
		@RequestMapping("lectureInsert.do")
		@ResponseBody
		public Map<String, Object> lectureInsert(Model model, @RequestParam Map<String, Object> paramMap, HttpServletRequest request,
			HttpServletResponse response, HttpSession session) throws Exception {
			
			logger.info("+ Start " + className + ".lectureInsert");
			logger.info("   - paramMap : " + paramMap);
				
			Map<String, Object> returnmap = new HashMap<String, Object>();

			String action = String.valueOf(paramMap.get("action"));
			
			paramMap.put("loginId",session.getAttribute("loginId"));
			
			if("I".equals(action)){
				//LectureManagementService.lectureInsertComnDtlCod(paramMap);
				LectureManagementService.lectureInsert(paramMap);
			}

			logger.info("+ End " + className + ".lectureInsert");

			return returnmap;
		}
		
		
}
