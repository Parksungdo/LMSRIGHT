package kr.happyjob.study.tut.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.log4j.LogManager;
import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import kr.happyjob.study.tut.model.CounselModel;
import kr.happyjob.study.tut.service.CounselService;



@Controller
@RequestMapping("/tut/")
public class CounselController {
	
	
	// Set logger
	private final Logger logger = LogManager.getLogger(this.getClass());

	// Get class name for logger
	private final String className = this.getClass().toString();
	
	@Autowired
	CounselService counselService;
	
	/**
	 * 초기화면
	 */
	@RequestMapping("counsel.do")
	public String counsel(Model model, @RequestParam Map<String, Object> paramMap, HttpServletRequest request,
			HttpServletResponse response, HttpSession session) throws Exception {
		
		logger.info("+ Start " + className + ".counsel");
		logger.info("   - paramMap : " + paramMap);
		
		// 로그인 사용자 정보 넣기
		request.setAttribute("loginId", session.getAttribute("loginId"));
		
		logger.info("+ End " + className + ".counsel");

		return "tut/counsel/counsel";
	}
	
	// 학생 목록 불러오기
	@RequestMapping("counselStudentList.do")
	public String counselStudentList(Model model, @RequestParam Map<String, Object> paramMap, HttpServletRequest request,
			HttpServletResponse response, HttpSession session) throws Exception {
		
		logger.info("+ Start " + className + ".counselStudentList");
		logger.info("   - paramMap : " + paramMap);
		
		paramMap.put("loginID", session.getAttribute("loginId"));
		
		int pageNum = Integer.parseInt(String.valueOf(paramMap.get("pageNum")));
		int pageSize = Integer.parseInt(String.valueOf(paramMap.get("pageSize")));
		int startPage = (pageNum - 1) * pageSize;
		
		paramMap.put("pageSize", pageSize);
		paramMap.put("startPage", startPage);
		
		List<CounselModel> counselStudentList = counselService.counselStudentList(paramMap);
		int totalCnt = counselService.counselStudentListCnt(paramMap);
		
		model.addAttribute("counselStudentList", counselStudentList);
		model.addAttribute("totalCnt", totalCnt);
		
		
		logger.info("+ End " + className + ".counselStudentList");
		
		return "tut/counsel/counselStudentList";
	}
	
	


}
