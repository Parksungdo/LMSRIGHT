<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.happyjob.study.tut.dao.LecturePlanListDAO">

   <!-- 강의 목록 조회 -->
   <select id="lecturePlanListSearch" resultType="kr.happyjob.study.tut.model.LecturePlanListModel">
      /*kr.happyjob.study.tut.dao.LecturePlanListDAO.lecturePlanListSearch*/      
      SELECT	lc.lecture_no
                  , lc.loginID
                  , dc.detail_name as lecture_name
                  , ui.name as teacher_name
                  , lc.test_no
                  , lc.lecture_person
                  , lc.lecture_total
                  , lc.lecture_goal
                  , lc.lecture_start
                  , lc.lecture_end
                  , lc.lecture_confirm
	  	FROM	tb_lecture lc
          		inner join tb_detail_code dc on dc.group_code = 'lecture_no' and dc.detail_code = lc.lecture_no
          		inner join tb_userinfo ui on lc.loginID = ui.loginID
          	<where>
          		lc.loginID = #{loginID}
				<if test="(lectureNameSearch != null) and (!lectureNameSearch.equals(''))">
				      and detail_name LIKE CONCAT('%', #{lectureNameSearch}, '%')      	
				</if>
			</where>
       LIMIT #{startnum}, #{pageSize}
   </select>
   
   <!-- 강의 목록 총 갯수 조회 -->
   <select id="lecturePlanListCnt" resultType="int">
      /*kr.happyjob.study.tut.dao.LectureListDAO.lecturePlanListCnt*/      
      SELECT	count(*)
	  	FROM	tb_lecture lc
          		inner join tb_detail_code dc on dc.group_code = 'lecture_no' and dc.detail_code = lc.lecture_no
        WHERE lc.loginID = #{loginID}
   </select>
   
   <!-- 강의 상세보기 -->
   <select id="LecturePlanSelect" resultType="kr.happyjob.study.tut.model.LecturePlanListModel">
      /*kr.happyjob.study.tut.dao.LecturePlanListDAO.LecturePlanSelect*/      
       SELECT	lc.lecture_no
                  , lc.loginID
                  , dc.detail_name as lecture_name
                  , ui.name as teacher_name
                  , lc.test_no
                  , lc.lecture_person
                  , lc.lecture_total
                  , lc.lecture_goal
                  , lc.lecture_start
                  , lc.lecture_end
                  , lc.lecture_confirm
	  	FROM	tb_lecture lc
          		inner join tb_detail_code dc on dc.group_code = 'lecture_no' and dc.detail_code = lc.lecture_no
          		inner join tb_userinfo ui on lc.loginID = ui.loginID
        WHERE   lc.lecture_no = #{lectureno}
        AND		lc.loginID = #{loginID}
   </select>
   
   <!-- 강의 주차별계획 목록 -->
   <select id="weekPlanList" resultType="kr.happyjob.study.tut.model.WeekPlanListModel">
      /*kr.happyjob.study.tut.dao.LecturePlanListDAO.weekPlanList*/      
       SELECT	plan_no
      		  , lecture_no
		      , loginID
		      , plan_week
		      , plan_goal
		      , plan_content
		      , plan_start
		      , plan_end
	  	FROM	tb_plan 
        WHERE   lecture_no = #{lectureno}
        ORDER BY plan_no
		LIMIT #{startnum}, #{pageSize}
   </select>
   
   <!-- 강의 주차별계획 목록 -->
   <select id="weekPlanListCnt" resultType="int">
      /*kr.happyjob.study.tut.dao.LecturePlanListDAO.weekPlanListCnt*/      
       SELECT	count(*)
	  	FROM	tb_plan 
        WHERE   lecture_no = #{lectureno}
   </select>
   
   <!-- 강의 주차별계획 선택 -->
   <select id="weekselect" resultType="kr.happyjob.study.tut.model.WeekPlanListModel">
      /*kr.happyjob.study.tut.dao.LecturePlanListDAO.weekselect*/      
       SELECT	plan_no
      		  , lecture_no
		      , loginID
		      , plan_week
		      , plan_goal
		      , plan_content
		      , plan_start
		      , plan_end
	  	FROM	tb_plan 
        WHERE   lecture_no = #{lectureno}
        AND		plan_no = #{plan_no}
   </select>
   
   <insert id="weekinsert">
		<selectKey resultType="int" keyProperty="newweekplan" order="BEFORE">
			select ifnull(max(plan_no), 0) + 1 from tb_plan where lecture_no = #{lectureno}
		</selectKey>
		insert into tb_plan
			(
				  plan_no
				, lecture_no
				, loginID
				, plan_week
				, plan_goal
				, plan_content
				, plan_start
				, plan_end
			) value (
				  #{newweekplan}
				, #{lectureno}
				, #{loginID}
				, #{plan_week}
				, #{plan_goal}
				, #{plan_content}
				, #{plan_start}
				, #{plan_end}
			)
	</insert>
	
	<update id="weekupdate">
		update tb_plan
			set plan_week = #{plan_week}
				, plan_goal = #{plan_goal}
				, plan_content = #{plan_content}
				, plan_start = #{plan_start}
				, plan_end = #{plan_end}
			where plan_no = #{plan_no}
			and lecture_no = #{lectureno}
	</update>
	
	<delete id="weekdelete">
        delete from tb_plan
		 where plan_no = (
                            select ll.plan_no
                              from (
                                     select max(tps.plan_no)  as plan_no
                                       from tb_plan tps 
                                       where tps.lecture_no = #{lectureno}
                                   ) ll
                         )
		   and lecture_no = #{lectureno}		   
	</delete>
   
</mapper>