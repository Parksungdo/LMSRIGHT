<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.happyjob.study.tut.dao.LecturePlanListDAO">

   <!-- 강의 목록 조회 -->
   <select id="lecturePlanListSearch" resultType="kr.happyjob.study.tut.model.LecturePlanListModel">
      /*kr.happyjob.study.tut.dao.LecturePlanListDAO.lecturePlanListSearch*/      
      SELECT tl.lecture_seq
		      , tl.loginID
		      , ui.name
		      , tl.test_no
		      , tl.lecture_no
		      , dc.detail_name as lecture_name
		      , tl.lecture_person
		      , tl.lecture_total
		      , tl.lecture_goal
		      , tl.lecture_start
		      , tl.lecture_end
		      , tl.lecture_confirm
		  FROM tb_lecture tl
			    INNER JOIN tb_detail_code dc ON dc.group_code = 'lecture_no' AND dc.detail_code = tl.lecture_no
			    INNER JOIN tb_userinfo ui ON tl.loginID = ui.loginID
          	<where>
          		AND tl.loginID = #{loginID}
          		AND tl.lecture_confirm = 'N'
				<if test="(lectureNameSearch != null) and (!lectureNameSearch.equals(''))">
				      AND detail_name LIKE CONCAT('%', #{lectureNameSearch}, '%')      	
				</if>
			</where>
       LIMIT #{startnum}, #{pageSize}
   </select>
   
   <!-- 강의 목록 총 갯수 조회 -->
   <select id="lecturePlanListCnt" resultType="int">
      /*kr.happyjob.study.tut.dao.LectureListDAO.lecturePlanListCnt*/      
      SELECT	count(*)
		  FROM tb_lecture tl
			    INNER JOIN tb_detail_code dc ON dc.group_code = 'lecture_no' AND dc.detail_code = tl.lecture_no
			    INNER JOIN tb_userinfo ui ON tl.loginID = ui.loginID
          	<where>
          		AND tl.loginID = #{loginID}
          		AND tl.lecture_confirm = 'N'
				<if test="(lectureNameSearch != null) and (!lectureNameSearch.equals(''))">
				      AND detail_name LIKE CONCAT('%', #{lectureNameSearch}, '%')      	
				</if>
			</where>
   </select>
   
   <!-- 강의 상세보기 -->
   <select id="LecturePlanSelect" resultType="kr.happyjob.study.tut.model.LecturePlanListModel">
      /*kr.happyjob.study.tut.dao.LecturePlanListDAO.LecturePlanSelect*/      
		SELECT tl.lecture_seq
		      , tl.loginID
		      , ui.name
		      , tl.test_no
		      , tl.lecture_no
		      , dc.detail_name AS lecture_name
		      , tl.lecture_person
		      , tl.lecture_total
		      , tl.lecture_goal
		      , tl.lecture_start
		      , tl.lecture_end
		      , tl.lecture_confirm
		  FROM tb_lecture tl
		    INNER JOIN tb_detail_code dc ON dc.group_code = 'lecture_no' AND dc.detail_code = tl.lecture_no
		    INNER JOIN tb_userinfo ui ON tl.loginID = ui.loginID
        WHERE   tl.lecture_seq = #{lectureseq}
        AND		tl.loginID = #{loginID}
   </select>
   
   <!-- 강의 주차별계획 목록 -->
   <select id="weekPlanList" resultType="kr.happyjob.study.tut.model.WeekPlanListModel">
      /*kr.happyjob.study.tut.dao.LecturePlanListDAO.weekPlanList*/      
		SELECT tp.lecture_seq
		      , tp.plan_no
		      , tl.lecture_no
		      , tp.plan_week
		      , tp.plan_goal
		      , tp.plan_content
		      , tp.plan_start
		      , tp.plan_end
		  FROM tb_plan tp
		    INNER JOIN tb_lecture tl ON tl.lecture_seq = tp.lecture_seq
        WHERE   tp.lecture_seq = #{lectureseq}
        ORDER BY plan_no
		LIMIT #{startnum}, #{pageSize}
   </select>
   
   <!-- 강의 주차별계획 목록 -->
   <select id="weekPlanListCnt" resultType="int">
      /*kr.happyjob.study.tut.dao.LecturePlanListDAO.weekPlanListCnt*/      
       SELECT	COUNT(*)
		  FROM tb_plan tp
		    INNER JOIN tb_lecture tl ON tl.lecture_seq = tp.lecture_seq
        WHERE   tp.lecture_seq = #{lectureseq}
   </select>
   
   <!-- 강의 주차별계획 선택 -->
   <select id="weekselect" resultType="kr.happyjob.study.tut.model.WeekPlanListModel">
      /*kr.happyjob.study.tut.dao.LecturePlanListDAO.weekselect*/      
		SELECT tp.lecture_seq
		      , tp.plan_no
		      , tl.lecture_no
		      , tp.plan_week
		      , tp.plan_goal
		      , tp.plan_content
		      , tp.plan_start
		      , tp.plan_end
		  FROM tb_plan tp
		    INNER JOIN tb_lecture tl ON tl.lecture_seq = tp.lecture_seq
        WHERE   tp.lecture_seq = #{lectureseq}
        AND		plan_no = #{plan_no}
   </select>
   
   <insert id="weekinsert">
		<selectKey resultType="int" keyProperty="newweekplan" order="BEFORE">
			SELECT IFNULL(MAX(plan_no + 1), 1) FROM tb_plan
		</selectKey>
		INSERT INTO tb_plan
			(
				  lecture_seq
				, plan_no
				, plan_week
				, plan_goal
				, plan_content
				, plan_start
				, plan_end
			) VALUE (
				  #{lectureseq}
				, #{newweekplan}
				, #{plan_week}
				, #{plan_goal}
				, #{plan_content}
				, #{plan_start}
				, #{plan_end}
			)
	</insert>
	
	<update id="weekupdate">
		UPDATE tb_plan
			SET plan_week = #{plan_week}
				, plan_goal = #{plan_goal}
				, plan_content = #{plan_content}
				, plan_start = #{plan_start}
				, plan_end = #{plan_end}
			WHERE plan_no = #{plan_no}
			AND lecture_seq = #{lectureseq}
	</update>
	
	<delete id="weekdelete">
        DELETE FROM tb_plan
		 WHERE plan_no = (
                            SELECT ll.plan_no
                              FROM (
                                     SELECT MAX(tps.plan_no)  AS plan_no
                                       FROM tb_plan tps 
                                       WHERE tps.lecture_seq = #{lectureseq}
                                   ) ll
                         )
		   AND lecture_seq = #{lectureseq}		   
	</delete>
   
</mapper>